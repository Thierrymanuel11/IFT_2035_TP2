+(5)
	app(var(0), 5)
	int -> int
1 + 2
    app(app(var(0), 1), 2)
    int -> int -> int
cons(1,nil)
	app(app(var(4), 1), var(3))
	list(int)
?(1,nil)
	app(app(var(4), 1), var(3)) (identique)
	list(int)
let([length = lambda(x, if(empty(x), 0, 1 + length(cdr(x))))],
             length(?(42, ?(41, ?(40, nil))))
             + length(cons(1,nil)))
	let([lambda(if(app(var(7), var(0)), 0, app(app(var(2), 1), app(var(1), app(var(9), var(0))))))],
             app(var(0), app(app(var(5), 42), app(app(var(5), 41), app(app(var(5), 40), var(4)))))
             + app(var(0), app(app(var(5), 1), var(4))))
	int
nil : list(bool)
	var(3)
	list(bool)
lambda(x, x)
	lambda(var(0))
	forall(t, t -> t)

	let([x = 1], 3 + x) 	
		let([1], app(app(var(1), 3), var(0)))